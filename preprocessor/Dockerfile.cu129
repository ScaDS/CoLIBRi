# Stage 1: Paddle's GPU image with CUDA 12.9 + cuDNN 9.9 + PaddlePaddle 3.2 + Python 3.10 as base image
FROM paddlepaddle/paddle:3.2.0-gpu-cuda12.9-cudnn9.9 AS base

# Install local dependencies, do cleanup
RUN apt-get update && apt-get install -y \
    git curl \
    python3.10-venv \
    ffmpeg libsm6 libxext6  \
    tesseract-ocr poppler-utils \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Update pip and install uv
RUN pip install --no-input --upgrade pip \
    && pip install --no-input uv

# Stage 2: Build runtime image
FROM base AS runtime

ARG PP_PORT
ARG GPU_ID
WORKDIR /app/

# Copy dependency files
COPY pyproject.toml ./
COPY entrypoint.sh ./
RUN chmod +x ./entrypoint.sh
# Copy application code
COPY src ./src

# Create a venv with the systems Python which can access Paddle
RUN python3 -m venv --system-site-packages .venv \
    && ./.venv/bin/python -m pip install --no-input --upgrade pip

# Install dependencies in venv
RUN uv lock --extra cu129
    && uv sync --frozen --no-dev --extra cu129

# Expose PP_PORT to access from outside
EXPOSE ${PP_PORT}

# Make PP_PORT available at runtime
ENV PP_PORT=${PP_PORT}

# Env vars for CUDA
ENV CUDA_VISIBLE_DEVICES=${GPU_ID}

# Run the gunicorn server at entry
ENTRYPOINT ["/app/entrypoint.sh"]
